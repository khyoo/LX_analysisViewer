<script type="text/javascript">

  // Create layer
  var buildingSource = new ol.source.Vector({
    url: '/data/j_build.geojson',
    projection: 'EPSG:3857',
    format: new ol.format.GeoJSON()
  });

  var buildingVector = new ol.layer.Vector({
    title: '건물 Polygon',
    visible: true,
    source: buildingSource,
    /*
    style: new ol.style.Style({
    fill: new ol.style.Fill({ color: '#333' })
    }),
    */
    maxResolution: 7,
    zIndex: 1100
  });
  //map.addLayer(buildingVector);

  // Create layer
  var roadPOISource = new ol.source.Vector({
    url: '/data/poi.geojson',
    projection: 'EPSG:3857',
    format: new ol.format.GeoJSON()
  });

  var roadPOIVector = new ol.layer.Vector({
    title: '도로 Point',
    visible: true,
    source: roadPOISource,
    style: new ol.style.Style({
      image: new ol.style.Circle({
        radius: 5,
        snapToPixel: false,
        stroke: new ol.style.Stroke({
          //color: "#6C757D",
          color: "#900",
          width: 2
        })
      })
    }),
    maxResolution: 25,
    zIndex: 1000
  });
  //map.addLayer(poiVector);

  // flowline vetor layer
  var flowlineSource = new ol.source.Vector({
    url: '/data/flowline.geojson',
    format: new ol.format.GeoJSON()
  });
  var flowlineVector = new ol.layer.VectorImage({
    title: '도로 점수',
    visible: true,
    source: flowlineSource,
    style: styleFn
  });
  //map.addLayer(gpxVector);

  flowlineSource.once('change', function (e) {
    if (flowlineSource.getState() === 'ready') {
      /**
      * author : khyoo1221
      * description : 
      * @param {feature}
      * @param {paramNm}
      * @param {px}
      * 
      */
      setCoords_Z(flowlineSource.getFeatures()[0], 'params', flowlineSource.getFeatures()[0].getProperties().weights[0].w1);
      
      // Set Min/Max from feature
      getMinMax(flowlineSource.getFeatures()[0]);
    }
  });

  var radius = document.getElementById('radius');
  radius.addEventListener('input', function() {
    // console.log(parseInt(radius.value, 10));
    flowlineVector.setStyle(new ol.style.FlowLine({
      visible: false,
      lineCap: 'round',
      color: function (f, step) {
        var seg = [];
        var line = f.getGeometry().getLineString(0);
        line.getCoordinateAtSeg(step * line.getLength(), seg);
        var h = (seg[0][2] + seg[0][2]) / 2;
        var dh = 255 * (h - min) / (max - min);
        return getColor(dh, parseInt(radius.value, 10));
      },
      width: 10,
      geometry: function (f) {
        if (f.getGeometry().getType() === 'MultiLineString') {
          return f.getGeometry().getLineString(0);
        } else {
          return f.getGeometry();
        }
      }
    }));
  });

  // Set 3D renderer
  var r3D = new ol.render3D({
    /** /
    style: new ol.style.Style({
      stroke: new ol.style.Stroke({
        color: 'blue',
        width: 2
      }),
      fill: new ol.style.Fill({ color: 'red' })
    }),
    /**/
    // ghost: true,
    height: 0,
    maxResolution: 10,
    defaultHeight: 3.5
  });
  buildingVector.setRender3D(r3D);


</script>