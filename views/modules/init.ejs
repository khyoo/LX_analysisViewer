<script type="text/javascript">

  var roadPOISource2 = new ol.source.Vector({
    url: 'http://info.rlog.kr:8880/rest/shp2Geojson/jeonju_road_poi_all',
    projection: 'EPSG:3857',
    format: new ol.format.GeoJSON()
  });

  roadPOISource2.on('featuresloadstart', function (e) {
    $('#div_load_image').show();
  });

  roadPOISource2.on('featuresloadend', function (e) {
    $('#div_load_image').hide();
    if (roadPOISource2.getState() === 'ready') {
      // TO-DO         
    }
  });

  var roadPOIVector2 = new ol.layer.Vector({
    visible: false,
    source: roadPOISource2,
    style: new ol.style.Style({
      image: new ol.style.Circle({
        radius: 5,
        snapToPixel: false,
        stroke: new ol.style.Stroke({
          //color: "#6C757D",
          color: "#900",
          width: 2
        })
      })
    }),
    maxResolution: 25,
    zIndex: 1000
  });
  map.addLayer(roadPOIVector2);

  $('#allRoadPoiChk').on('click', function () {
    if (roadPOIVector2.getVisible()) {
      roadPOIVector2.setVisible(false);
    } else {
      roadPOIVector2.setVisible(true);
    }
  });

  map.addLayer(roadPOIVector);
  map.addLayer(roadPOIVector_matcher);
  map.addLayer(hmapVector);

  $('#psLayerChk').on('click', function () {
    if ($('#psLayerChk').is(':checked')) {
      $('#psPointChk').prop('checked', true);
      roadPOIVector.setVisible(true);
      roadPOILabelVector.setVisible(true);

      $('#psHmapChk').prop('checked', true);
      $('#psHmapScoreChk').prop('checked', true);
      $('.psPointDiv').css('display', 'inline');
      hmapVector.setVisible(true);
      $('.hmapDiv1').show();
    } else {
      $('#psPointChk').prop('checked', false);
      roadPOIVector.setVisible(false);
      roadPOILabelVector.setVisible(false);

      $('#psHmapChk').prop('checked', false);
      $('#psHmapScoreChk').prop('checked', false);
      $('.psPointDiv').css('display', 'none');
      hmapVector.setVisible(false);
      $('.hmapDiv1').hide();
    }
  });

  

  $('#psPointMatcherChk').on('click', function () {
    if (roadPOIVector_matcher.getVisible()) {
      roadPOIVector_matcher.setVisible(false);

      $('.psPointDiv2').css('display', 'none');
    } else {
      roadPOIVector_matcher.setVisible(true);

      $('.psPointDiv2').css('display', 'inline');
    }
  });

  

  map.addLayer(roadPOILabelVector);
  map.addLayer(roadPOILabelVector_ql);


  map.addLayer(flowlineVector);
  map.addLayer(flowlineVector_ql);

  $('#psLayerChk2').on('click', function () {
    if ($('#psLayerChk2').is(':checked')) {
      $('#psHmapChk2').prop('checked', true);
      $('.psLineDiv').css('display', 'inline');
      flowlineVector.setVisible(true);
      $('.hmapDiv2').show();
      $('.psItems').show();
    } else {
      $('#psHmapChk2').prop('checked', false);
      $('.psLineDiv').css('display', 'none');
      flowlineVector.setVisible(false);
      $('.hmapDiv2').hide();
      $('.psItems').hide();
    }
  });

  

  $('#psHmapChk3').on('click', function () {
    if (!$('#psHmapChk3').is(':checked')) {
      $('.hmapDiv3').hide();
    } else {
      $('.hmapDiv3').show();
    }
  });



  $('#qtLayerChk').on('click', function () {
    if (!$('#qtLayerChk').is(':checked')) {
      $('#qtPointChk').prop('checked', false);
      roadPOIVector.setVisible(false);
      roadPOILabelVector.setVisible(false);      

      $('#qtPointScoreChk').prop('checked', false);
      $('.qtPointDiv').css('display', 'none');
      
      $('#qtPointHmapChk').prop('checked', false);
      hmapVector.setVisible(false);
      $('.qtPointhmapDiv').hide();      

      roadPOILabelVector.setVisible(false);

      hmapVector.setVisible(false);
      $('.qtPointhmapDiv').hide();

      $('#qtRoadScoreChk').prop('checked', false);            
      flowlineVector.setVisible(false);      
      $('.qtRoadScoreDiv').css('display', 'none');

      $('#qtCustomChk').prop('checked', false);  
      $('.psItems').hide();
    } else {
      $('#qtPointChk').prop('checked', true);
      roadPOIVector.setVisible(true);
      roadPOILabelVector.setVisible(true);
      
      $('#qtPointScoreChk').prop('checked', true);
      $('.qtPointDiv').css('display', 'inline');

      $('#qtPointHmapChk').prop('checked', true);
      hmapVector.setVisible(true);
      $('.qtPointhmapDiv').show();

      roadPOILabelVector.setVisible(true);

      hmapVector.setVisible(true);
      $('.qtPointhmapDiv').show();

      $('#qtRoadScoreChk').prop('checked', true);
      flowlineVector.setVisible(true);      
      $('.qtRoadScoreDiv').css('display', 'inline');

      $('#qtCustomChk').prop('checked', true);
      $('.psItems').show();
    }
  });

  $('#qtPointChk').on('click', function () {
    if (roadPOIVector.getVisible()) {
      roadPOIVector.setVisible(false);
      roadPOILabelVector.setVisible(false);      

      $('#qtPointScoreChk').prop('checked', false);
      $('.qtPointDiv').css('display', 'none');
      
      $('#qtPointHmapChk').prop('checked', false);
      hmapVector.setVisible(false);
      $('.qtPointhmapDiv').hide();      
    } else {
      roadPOIVector.setVisible(true);
      roadPOILabelVector.setVisible(true);
      
      $('#qtPointScoreChk').prop('checked', true);
      $('.qtPointDiv').css('display', 'inline');

      $('#qtPointHmapChk').prop('checked', true);
      hmapVector.setVisible(true);
      $('.qtPointhmapDiv').show();
    }
  });

  $('#qtPointScoreChk').on('click', function () {
    if (roadPOILabelVector.getVisible()) {
      roadPOILabelVector.setVisible(false);
    } else {
      roadPOILabelVector.setVisible(true);
    }
  });

  $('#qtPointHmapChk').on('click', function () {
    if (hmapVector.getVisible()) {
      hmapVector.setVisible(false);
      $('.qtPointhmapDiv').hide();
    } else {
      hmapVector.setVisible(true);
      $('.qtPointhmapDiv').show();
    }
  });

  $('#qtRoadScoreChk').on('click', function () {
    if (flowlineVector.getVisible()) {
      flowlineVector.setVisible(false);      
      $('.qtRoadScoreDiv').css('display', 'none');
    } else {
      flowlineVector.setVisible(true);      
      $('.qtRoadScoreDiv').css('display', 'inline');
    }
  });

  $('#qtCustomChk').on('click', function () {
    if (!$('#qtCustomChk').is(':checked')) {
      $('.psItems').hide();
    } else {
      $('.psItems').show();
    }
  });










  $('#qlPointChk').on('click', function () {
    if (roadPOIVector.getVisible()) {
      roadPOIVector.setVisible(false);
      roadPOILabelVector_ql.setVisible(false);      

      $('#qlPointScoreChk').prop('checked', false);
      $('.qlPointDiv').css('display', 'none');
      
      $('#qlPointHmapChk').prop('checked', false);
      hmapVector.setVisible(false);
      $('.qlPointhmapDiv').hide();      
    } else {
      roadPOIVector.setVisible(true);
      roadPOILabelVector_ql.setVisible(true);
      
      $('#qlPointScoreChk').prop('checked', true);
      $('.qlPointDiv').css('display', 'inline');

      $('#qlPointHmapChk').prop('checked', true);
      hmapVector.setVisible(true);
      $('.qlPointhmapDiv').show();
    }
  });

  $('#qlPointScoreChk').on('click', function () {
    if (roadPOILabelVector_ql.getVisible()) {
      roadPOILabelVector_ql.setVisible(false);
    } else {
      roadPOILabelVector_ql.setVisible(true);
    }
  });



  $('#qlRoadScoreChk').on('click', function () {
    if (flowlineVector_ql.getVisible()) {
      flowlineVector_ql.setVisible(false);      
      $('.qlRoadScoreDiv').css('display', 'none');
    } else {
      flowlineVector_ql.setVisible(true);      
      $('.qlRoadScoreDiv').css('display', 'inline');
    }
  });















  $('#save1').on('click', function (e) {
    alert('준비 중입니다.');
  });

  $('#down1').on('click', function (e) {
    var geojson = new ol.format.GeoJSON().writeFeatures(roadPOISource.getFeatures());
    // console.log(geojson);
    var filename = 'poi.geojson';

    var createUrl = '/download/create';
    var downloadUrl = '/download';

    $.ajax({
      type: "POST",
      url: createUrl,
      data: {
        filename: filename,
        source: geojson
      },
      dataType: "json",
      beforeSend: function () {
        $('#div_load_image').show();
      },
      success: function (data) {
        $('#div_load_image').hide();

        location.href = downloadUrl + '/' + filename;
      },
      error: function () {
        alert('에러가 발생했습니다.');
      }
    });
  });

  $('#save2').on('click', function (e) {
    alert('준비 중입니다.');
  });

  $('#down2').on('click', function (e) {
    var geojson = new ol.format.GeoJSON().writeFeatures(flowlineSource.getFeatures());
    // console.log(geojson);
    var filename = 'line.geojson';

    var createUrl = '/download/create';
    var downloadUrl = '/download';

    $.ajax({
      type: "POST",
      url: createUrl,
      data: {
        filename: filename,
        source: geojson
      },
      dataType: "json",
      beforeSend: function () {
        $('#div_load_image').show();
      },
      success: function (data) {
        $('#div_load_image').hide();

        location.href = downloadUrl + '/' + filename;
      },
      error: function () {
        alert('에러가 발생했습니다.');
      }
    });
  });




  // 공간 분석 결과 이벤트 처리
  $('#btnCreate').on('click', function(){
      let len = $('#classCnt').val();

      //$.getJSON('data/qt_score.geojson',function(data) {
      $.getJSON('data/qt_score.geojson',function(data) {
   			var items = []; // will store values
   			
   			$.each(data.features, function(i,feature){
          if (feature.properties.walk_index != null) {
     				items.push(feature.properties.walk_index);
          }
   			});
   		
   			var dataJson = items;
   			
   			// Seventh serie
   			serie7 = new geostats(dataJson);
   			serie7.setPrecision(6);
   			
   			// we get Eq interval classification
   			//var a = serie7.getClassQuantile(5);
   			var a = serie7.getClassEqInterval(len);
   			//var a = serie7.getClassJenks2(3);
   			
        let html = '<br>';
        html += '<ul style="padding-left:1rem;">';
        let color_temp2 = ['1f78b4','33a02c','f4c804','f37b03','ff0000'];
   			var ranges = serie7.ranges;
   			for(i = 0; i < ranges.length ; i++) {   				
          // console.log(ranges[i]);
          
          html += '<li style="list-style-type :none;">';
          html += '<input type="checkbox" name="chkClass">&nbsp;&nbsp;';
          html += '<div class="geostats-legend-block" style="background-color:#' + color_temp2[i] +'"></div>';
          html += ranges[i];
          html += '</li>';
   			}

        html += '</ul>';

        $('.area-result').html(html);

        let color_temp = [[31,120,180],[51,160,44],[244,200,4],[243,123,3],[255,0,0]];

        // flowline vetor layer
        var flowlineSource2 = new ol.source.Vector({          
          // url: '/data/qt_score.geojson',
          url: '/data/qt_score.geojson',
          format: new ol.format.GeoJSON()
        });
        var flowlineVector2 = new ol.layer.VectorImage({
          //title: '도로 점수',
          visible: true,
          source: flowlineSource2,
          style: new ol.style.FlowLine({
            visible: false,
            lineCap: 'round',
            color: function (f) {     //console.log(ranges);         
              for(i = 0; i < ranges.length ; i++) {   				
              
                // console.log(Number(ranges[i].split('-')[0])+'-------');
                
                let temp_val = Number(f.getProperties().walk_index);
                // console.log(temp_val);
                if (temp_val == null || temp_val == 0) { console.log("1");
                  return [0,0,0,0];
                }
                if((Number(ranges[i].split('-')[0]) < temp_val) && (Number(ranges[i].split('-')[1]) >= temp_val)) {
                  // console.log("2");
                  return color_temp[i];
                } 
              }              
            },
            width: 10,
            geometry: function (f) {
              if (f.getGeometry().getType() === 'MultiLineString') {
                return f.getGeometry().getLineString(0);
              } else {
                return f.getGeometry();
              }
            }
          })
        });
        map.addLayer(flowlineVector2);

        flowlineSource2.on('featuresloadstart', function (e) {
          $('#div_load_image').show();
        });

        flowlineSource2.on('featuresloadend', function (e) {
          $('#div_load_image').hide();
          if (flowlineSource2.getState() === 'ready') {
            // TO-DO     
          }
        });

        flowlineSource2.once('change', function (e) {
          if (flowlineSource2.getState() === 'ready') {
            /**
            * author : khyoo1221
            * description : 
            * @param {feature}
            * @param {paramNm}
            * @param {px}
            * 
            */

            // setCoords_Z(flowlineSource.getFeatures()[0], 'params', flowlineSource.getFeatures()[0].getProperties().weights[0].w1);      
            // setCoords_Z(flowlineSource2.getFeatures(), 'walk_index', 200);
            setCoords_Z2(flowlineSource2.getFeatures(), 200);

            // Set Min/Max from feature
            getMinMax(flowlineSource2.getFeatures());
          }
        });
      });
    });

</script>